version: '3.9'
services:
  frontend:
    container_name: frontend-notes-app
    build:
      context: frontend
      dockerfile: Dockerfile
    image: frontend:latest
    ports:
      - '80:80'
    networks:
      - network
    depends_on:
      - backend
  
  backend:
    container_name: backend-notes-app
    build:
      context: backend
      dockerfile: Dockerfile
    image: backend:latest
    ports:
      - '8080:8080'
    networks:
      - network
    depends_on:
      db:
        condition: service_healthy
      keycloak:
        condition: service_healthy
      keycloak-initializer:
        condition: service_completed_successfully

  db:
    container_name: mysql-notes-app
    image: mysql:8.0.31-oracle
    restart: always
    environment:
      MYSQL_DATABASE: notes
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_HOST: '%'
      MYSQL_USER: notes
      MYSQL_PASSWORD: notes
    ports:
            - "3306:3306"
    healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
            timeout: 5s
            retries: 10
    networks:
      - network

  keycloak-initializer:
    container_name: keycloakinitializer-notes-app
    build:
      context: keycloakinitializer
      dockerfile: Dockerfile
    image: keycloakinitializer:latest
    networks:
      - network
    depends_on:
      keycloak:
        condition: service_healthy

  keycloak:
    container_name: keycloak-notes-app
    image: quay.io/keycloak/keycloak:20.0.1
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=mysql
      - KC_DB_URL_HOST=keycloak-db
      - KC_DB_URL_DATABASE=keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=password
    command: start-dev
    ports:
      - '8081:8080'
    networks:
      - network
    depends_on:
      keycloak-db:
        condition: service_healthy
    healthcheck:
      test: "curl -f http://localhost:8080/admin || exit 1"

  keycloak-db:
    image: mysql:8.0.31-oracle
    container_name: keycloak-db-notes-app
    environment:
      - MYSQL_DATABASE=keycloak
      - MYSQL_USER=keycloak
      - MYSQL_PASSWORD=password
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - '3307:3306'
    networks:
      - network
    healthcheck:
      test: "mysqladmin ping -u root -p$${MYSQL_ROOT_PASSWORD}"

networks:
  network:
    driver: bridge
